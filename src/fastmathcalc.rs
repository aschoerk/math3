#![allow(dead_code)] 
#![allow(unused_parens)]
use std::f64;
use std::f32;
use rsutils::*;


        /**
     * 0x40000000 - used to split a double into two parts, both with the low order bits cleared.
     * Equivalent to 2^30.
     */
    // 1073741824L
     const HEX_40000000: i64 = 0x40000000;

    /** Factorial table, for Taylor series expansions. 0!, 1!, 2!, ... 19! */
     const FACT : [f64; 20] = [// 0
    1.0, // 1
    1.0, // 2
    2.0, // 3
    6.0, // 4
    24.0, // 5
    120.0, // 6
    720.0, // 7
    5040.0, // 8
    40320.0, // 9
    362880.0, // 10
    3628800.0, // 11
    39916800.0, // 12
    479001600.0, // 13
    6227020800.0, // 14
    87178291200.0, // 15
    1307674368000.0, // 16
    20922789888000.0, // 17
    355687428096000.0, // 18
    6402373705728000.0, // 19
    121645100408832000.0, ]
    ;

    /** Coefficients for slowLog. */
     const LN_SPLIT_COEF: [[f64; 2]; 16] = [[2.0, 0.0, ]
    , [0.6666666269302368, 3.9736429850260626E-8, ]
    , [0.3999999761581421, 2.3841857910019882E-8, ]
    , [0.2857142686843872, 1.7029898543501842E-8, ]
    , [0.2222222089767456, 1.3245471311735498E-8, ]
    , [0.1818181574344635, 2.4384203044354907E-8, ]
    , [0.1538461446762085, 9.140260083262505E-9, ]
    , [0.13333332538604736, 9.220590270857665E-9, ]
    , [0.11764700710773468, 1.2393345855018391E-8, ]
    , [0.10526403784751892, 8.251545029714408E-9, ]
    , [0.0952233225107193, 1.2675934823758863E-8, ]
    , [0.08713622391223907, 1.1430250008909141E-8, ]
    , [0.07842259109020233, 2.404307984052299E-9, ]
    , [0.08371849358081818, 1.176342548272881E-8, ]
    , [0.030589580535888672, 1.2958646899018938E-9, ]
    , [0.14982303977012634, 1.225743062930824E-8, ]
    , ]
    ;

    /** Table start declaration. */
     const TABLE_START_DECL: &'static str = "    {";

    /** Table end declaration. */
     const TABLE_END_DECL: &'static str = "    };";
     
     struct FastMathCalc {
     }
     



